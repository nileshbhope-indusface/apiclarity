// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "APIClarity Plugins telemetries API",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "paths": {
    "/telemetry": {
      "post": {
        "summary": "Post an http telemetry",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Telemetry",
              "$ref": "#/definitions/Telemetry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/responses/Success"
            }
          },
          "default": {
            "$ref": "#/responses/UnknownError"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "description": "An object that is return in all cases of failures.",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Common": {
      "type": "object",
      "properties": {
        "TruncatedBody": {
          "type": "boolean"
        },
        "body": {
          "type": "string",
          "format": "byte"
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Header"
          }
        },
        "time": {
          "description": "Time since epoch (milliseconds)",
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "Header": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Request": {
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/Common"
        },
        "host": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/Common"
        },
        "statusCode": {
          "type": "string"
        }
      }
    },
    "SuccessResponse": {
      "description": "An object that is return in cases of success that return nothing.",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Telemetry": {
      "type": "object",
      "properties": {
        "destinationAddress": {
          "type": "string"
        },
        "destinationNamespace": {
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/Request"
        },
        "requestID": {
          "type": "string"
        },
        "response": {
          "$ref": "#/definitions/Response"
        },
        "scheme": {
          "type": "string"
        },
        "sourceAddress": {
          "type": "string"
        },
        "upstreamLineage": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "responses": {
    "Success": {
      "description": "success message",
      "schema": {
        "$ref": "#/definitions/SuccessResponse"
      }
    },
    "UnknownError": {
      "description": "unknown error",
      "schema": {
        "$ref": "#/definitions/ApiResponse"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "APIClarity Plugins telemetries API",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "paths": {
    "/telemetry": {
      "post": {
        "summary": "Post an http telemetry",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Telemetry",
              "$ref": "#/definitions/Telemetry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "success message",
              "schema": {
                "$ref": "#/definitions/SuccessResponse"
              }
            }
          },
          "default": {
            "description": "unknown error",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "description": "An object that is return in all cases of failures.",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Common": {
      "type": "object",
      "properties": {
        "TruncatedBody": {
          "type": "boolean"
        },
        "body": {
          "type": "string",
          "format": "byte"
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Header"
          }
        },
        "time": {
          "description": "Time since epoch (milliseconds)",
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "Header": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Request": {
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/Common"
        },
        "host": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/Common"
        },
        "statusCode": {
          "type": "string"
        }
      }
    },
    "SuccessResponse": {
      "description": "An object that is return in cases of success that return nothing.",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Telemetry": {
      "type": "object",
      "properties": {
        "destinationAddress": {
          "type": "string"
        },
        "destinationNamespace": {
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/Request"
        },
        "requestID": {
          "type": "string"
        },
        "response": {
          "$ref": "#/definitions/Response"
        },
        "scheme": {
          "type": "string"
        },
        "sourceAddress": {
          "type": "string"
        },
        "upstreamLineage": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "responses": {
    "Success": {
      "description": "success message",
      "schema": {
        "$ref": "#/definitions/SuccessResponse"
      }
    },
    "UnknownError": {
      "description": "unknown error",
      "schema": {
        "$ref": "#/definitions/ApiResponse"
      }
    }
  }
}`))
}
